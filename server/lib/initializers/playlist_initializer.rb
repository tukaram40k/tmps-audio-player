require_relative '../db_connector/db_connector'
require_relative '../playlist_builder/playlist_director'
require_relative '../playlist_builder/concrete_builders/user_playlist_concrete_builder'
require_relative '../playlist_builder/concrete_builders/artist_playlist_concrete_builder'
require_relative '../playlist_builder/concrete_builders/system_playlist_concrete_builder'

class PlaylistInitializer
  attr_accessor :user_playlist_director,
                :artist_playlist_director,
                :system_playlist_director,
                :playlists_hash, :track_list

  def initialize
    db_connector = DBConnector.create
    db_connector.load_playlists
    @playlists_hash = db_connector.playlists_hash

    @user_playlist_director = PlaylistDirector.new(UserPlaylistConcreteBuilder.new)
    @artist_playlist_director = PlaylistDirector.new(ArtistPlaylistConcreteBuilder.new)
    @system_playlist_director = PlaylistDirector.new(SystemPlaylistConcreteBuilder.new)
  end

  def load_tracks(track_list)
    @track_list = track_list
  end

  def build_playlists
    playlists = []
    @playlists_hash.each do |hash|
      case hash['type']
      when 'user-custom-playlist'
        playlist = @user_playlist_director.build_playlist(hash)
      when 'autogenerated-playlist'
        playlist = @system_playlist_director.build_playlist(hash)
      when 'artist-album'
        playlist = @artist_playlist_director.build_playlist(hash)
      else
        raise 'Unknown playlist type'
      end
      playlists << playlist
    end

    playlists
  end
end

# a = PlaylistInitializer.new
# puts a.build_playlists